{% if section.settings.collection and section.settings.collection.products.size > 0 %}
  <div class="featured-products section">
    <h2 class="featured-products__title">{{ section.settings.title }}</h2>
    <div class="featured-products__list">
      {% for product in section.settings.collection.products %}
        {% unless product in cart.items %}
          <div class="featured-products__item">
            <a href="{{ product.url }}" class="featured-products__link">
              <img
                src="{{ product.featured_image | image_url: 'medium' }}"
                alt="{{ product.title }}"
                class="featured-products__image"
                width="375px"
                height="260px"
              >
              <h3 class="featured-products__name">{{ product.title }}</h3>
            </a>
            <button class="featured-products__add-to-cart" data-product-id="{{ product.variants.first.id }}">
              Add to cart - {{ money | product.price }}
            </button>
          </div>
        {% endunless %}
      {% endfor %}
    </div>
  </div>
{% else %}
  <p>No products available. Select a collection in the theme customizer.</p>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.featured-products__add-to-cart').forEach(function (button) {
      button.addEventListener('click', function () {
        var productId = this.dataset.productId;
        fetch('/cart/add.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: productId, quantity: 1 }),
        })
          .then(function (response) {
            if (response.ok) {
              return response.json();
            }
            throw new Error('Failed to add product to cart.');
          })
          .then(function (data) {
            fetch('/cart?view=popup')
              .then(response => response.text())
              .then(html => {
                document.querySelector('.mini-cart').innerHTML = html;
              });

            var sectionId = '{{ section.id }}';
            fetch('/?section_id=' + sectionId)
              .then(response => response.text())
              .then(html => {
                var parser = new DOMParser();
                var doc = parser.parseFromString(html, 'text/html');
                var newSection = doc.querySelector('.featured-products.section');
                document.querySelector('.featured-products.section').innerHTML = newSection.innerHTML;
              });
          })
          .catch(function (error) {
            console.error(error);
          });
      });
    });
  });
</script>

{% schema %}
{
  "name": "Featured Products",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Featured Products"
    }
  ],
  "presets": [
    {
      "name": "Featured Products",
      "category": "Custom"
    }
  ]
}
{% endschema %}
