{% if section.settings.collection and section.settings.collection.products.size > 0 %}
  <div class="featured-products section">
    <h2 class="featured-products__title">{{ section.settings.title }}</h2>
    <div class="featured-products__list">
      {% for product in section.settings.collection.products %}
        {% assign product_in_cart = false %}
        {% for item in cart.items %}
          {% if item.product_id == product.id %}
            {% assign product_in_cart = true %}
          {% endif %}
        {% endfor %}
        {% unless product_in_cart %}
          <div class="featured-products__item">
            <a href="{{ product.url }}" class="featured-products__link">
              <img
                src="{{ product.featured_image | img_url: 'medium' }}"
                alt="{{ product.title }}"
                class="featured-products__image"
                width="100%"
                height="340px"
              >
              <h3 class="featured-products__name">{{ product.title }}</h3>
            </a>
            <button class="featured-products__add-to-cart" data-product-id="{{ product.variants.first.id }}">
              Add to cart - {{ product.price | money_without_trailing_zeros }}
            </button>
          </div>
        {% endunless %}
      {% endfor %}
    </div>
  </div>
{% else %}
  <p>No products available. Select a collection in the theme customizer.</p>
{% endif %}

<style>
  .featured-products {
    padding: 40px 20px;
    text-align: center;
    background-color: #f8f8f8;
  }
  .featured-products__title {
    font-size: 42px;
    font-weight: 900;
    margin-bottom: 20px;
    color: #656874;
    line-height: 42px;
  }
  .featured-products__list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: stretch;
    gap: 20px;
  }
  .featured-products__item {
    width: 520px;
    height: 520px;
    background: white;
    padding: 15px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease-in-out;
    margin: 10px;
  }
  .featured-products__item:hover {
    transform: translateY(-5px);
  }
  .featured-products__link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .featured-products__image {
    width: 100%;
    height: 340px;
    object-fit: cover;
  }
  .featured-products__name {
    font-weight: 400;
    font-size: 22px;
    line-height: 32px;
    text-align: center;
  }
  .featured-products__price {
    font-size: 1rem;
    color: #464b90;
    font-weight: bold;
  }
  .featured-products__empty {
    font-size: 1rem;
    color: #666;
  }
  .featured-products__add-to-cart {
    margin-top: 10px;
    padding: 10px 20px;
    background-color: #464b90;
    color: white;
    cursor: pointer;
    display: inline-block;
    width: 285px;
    height: 62px;
    border-radius: 40px;
    border-width: 1px;
    font-weight: 400;
    font-size: 16px;
    line-height: 26px;
  }
  .featured-products__add-to-cart:hover {
    background-color: #464bbb;
  }
  @media (max-width: 1200px) {
    .featured-products__item {
      flex: 1 1 45%;
      max-width: 45%;
    }
  }
  @media (max-width: 800px) {
    .featured-products__item {
      flex: 1 1 100%;
      max-width: 100%;
    }
    .featured-products__image {
      width: 375px;
      height: 260px;
    }
  }
  @media (max-width: 435px) {
    .featured-products__item {
      flex: 1 1 100%;
      max-width: 100%;
    }
    .featured-products__image {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.featured-products__add-to-cart').forEach(function (button) {
      button.addEventListener('click', function () {
        var productId = this.dataset.productId;
        fetch('/cart/add.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: productId, quantity: 1 }),
        })
          .then(function (response) {
            if (response.ok) {
              return response.json();
            }
            throw new Error('Failed to add product to cart.');
          })
          .then(function (data) {
            console.log('Product added to cart:', data);

            var miniCart = document.querySelector('.mini-cart');
            if (miniCart) {
              fetch('/cart?view=popup')
                .then((response) => response.text())
                .then((html) => {
                  miniCart.innerHTML = html;
                });
            }

            var sectionId = '{{ section.id }}';
            fetch('/?section_id=' + sectionId)
              .then((response) => response.text())
              .then((html) => {
                var parser = new DOMParser();
                var doc = parser.parseFromString(html, 'text/html');
                var newSection = doc.querySelector('.featured-products.section');
                document.querySelector('.featured-products.section').innerHTML = newSection.innerHTML;
              });
          })
          .catch(function (error) {
            console.error(error);
          });
      });
    });
  });
</script>

{% schema %}
{
  "name": "Featured Products",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Featured Products"
    }
  ],
  "presets": [
    {
      "name": "Featured Products",
      "category": "Custom"
    }
  ]
}
{% endschema %}
